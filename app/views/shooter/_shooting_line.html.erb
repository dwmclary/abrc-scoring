<div align="center" style="float:left">
    <h2> <%= @shooter.name%> Performance </h2>
    <div style="float:left;width:100px">
        <p><b>Best Round </b> <b style="font-size:24px;color:#1E72AC"> <%=@round_scores.max%></b></p>
        <p><b>Worst Round </b> <b style="font-size:24px;color:#1E72AC"> <%=@round_scores.min%></b></p>
        <p><b><%= link_to "Shot Breakdown", :action => "breakdown", :id => @shooter.id%></b></p>
    </div>    
<div id="shooter_line" style="width:550px;float:left">
</div>
</div>

<script type="text/javascript+protovis">

    /* Sizing and scales. */
    var scores = <%=array_or_string_for_javascript @round_scores%>.map(parseFloat);
    var data = pv.range(0, <%=@round_scores.size%>, 1).map(function(x) {
        return {x: x+1, y: scores[x]};
      });
    var w = 500,
        h = 300,
        x = pv.Scale.linear(data, function(d) d.x).range(0, w),
        y = pv.Scale.linear(<%=@round_scores.min%>-20, <%=@round_scores.max%> + 20).range(0, h);
    var i = -1;

    /* The root panel. */
    var vis = new pv.Panel().canvas($(shooter_line))
        .width(w)
        .height(h)
        .bottom(20)
        .left(20)
        .right(10)
        .top(5);

    /* X-axis ticks. */
    vis.add(pv.Rule)
        .data(x.ticks(<%=@round_scores.size%>-1))
        .visible(function(d) d > 0)
        .left(x)
        .strokeStyle("#eee")
      .add(pv.Rule)
        .bottom(-5)
        .height(5)
        .strokeStyle("#000")
      .anchor("bottom").add(pv.Label)
        .text(x.tickFormat);

    /* Y-axis ticks. */
    vis.add(pv.Rule)
        .data(y.ticks(5))
        .bottom(y)
        .strokeStyle(function(d) d ? "#eee" : "#000")
      .anchor("left").add(pv.Label)
        .text(y.tickFormat);

    /* The line. */
    var line = vis.add(pv.Line)
        .data(data)
        .interpolate("step-after")
        .left(function(d) x(d.x))
        .bottom(function(d) y(d.y))
        .lineWidth(3);
        
    var dot = line.add(pv.Dot)
        .visible(function() i >= 0)
        .data(function() [data[i]])
        .fillStyle(function() line.strokeStyle())
        .strokeStyle("#000")
        .size(20)
        .lineWidth(1);
        
    dot.add(pv.Dot)
        .left(10)
        .bottom(10)
      .anchor("right").add(pv.Label)
        .text(function(d) d.y.toFixed(2));
        
    vis.add(pv.Bar)
        .fillStyle("rgba(0,0,0,.001)")
        .event("mouseout", function() {
            i = -1;
            return vis;
          })
        .event("mousemove", function() {
            var mx = x.invert(vis.mouse().x);
            i = pv.search(data.map(function(d) d.x), mx);
            i = i < 0 ? (-i - 2) : i;
            return vis;
          });

    vis.render();

</script>